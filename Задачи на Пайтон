						Змеиный регистр


Напишите функцию convert_to_python_case(text), которая принимает в качестве аргумента строку в «верблюжьем регистре» и преобразует его в «змеиный регистр».

Примечание 1. Почитать подробнее о стилях именования можно тут.

Примечание 2. Следующий программный код:

print(convert_to_python_case('ThisIsCamelCased'))
print(convert_to_python_case('IsPrimeNumber'))
должен выводить:

this_is_camel_cased
is_prime_number



# объявление функции
def convert_to_python_case(text):
    t = ''
    a = 0
    for i in range(len(text)):
        if i > 0 and 'A' <= text[i] <= 'Z' or 'А' <= text[i] <= 'Я':
            t += text[a:i] + '_'
            a = i
    t += text[a:len(text)]
    t = t.lower()
    return t

# считываем данные
txt = input()

# вызываем функцию
print(convert_to_python_case(txt))




				Палиндром 🌶️


Напишите функцию is_palindrome(text), которая принимает в качестве аргумента строку text и возвращает значение True если указанный текст является палиндромом и False в противном случае.

Примечание 1. Палиндром – это строка, которая читается одинаково в обоих направлениях

Примечание 2. При проверке считайте большие и маленькие буквы одинаковыми, а также игнорируйте пробелы, а также символы , . ! ? -.

Примечание 3. Следующий программный код:


print(is_palindrome('А роза упала на лапу Азора.'))
print(is_palindrome('Gabler Ruby - burrel bag!'))
print(is_palindrome('BEEGEEK'))
должен выводить:

True
True
False





# объявление функции

def is_palindrome(text):

    t = ''

    flag = False

    text = text.lower()

    for i in range(len(text)):

        if 'а' <= text[i] <= 'я' or 'a' <= text[i] <= 'z':

            t += text[i]

    if t == t[::-1]:

        return True

    else:

        return False

        
# считываем данные

txt = input()

# вызываем функцию

print(is_palindrome(txt))


                      Шифр Цезаря

На вход программе подается строка текста на английском языке, в которой нужно зашифровать все слова. Каждое слово строки следует зашифровать с помощью шифра Цезаря (циклического сдвига на длину этого слова). Строчные буквы при этом остаются строчными, а прописные – прописными.

Формат входных данных 
На вход программе подается строка текста на английском языке.

Формат выходных данных
Программа должна вывести зашифрованный текст в соответствии с условием задачи.

Примечание. Символы, не являющиеся английскими буквами, не изменяются.

Тестовые данные 🟢
Sample Input 1:

Day, mice. "Year" is a mistake!
Sample Output 1:

Gdb, qmgi. "Ciev" ku b tpzahrl!
Sample Input 2:

my name is Python!
Sample Output 2:

oa reqi ku Veznut!




text = input()
sp_txt_2 = text.split()


txt = ''

for i in range(len(text)):
    if 'a' <= text[i] <= 'z' or 'A' <= text[i] <= 'Z' or text[i] == ' ':
        txt += text[i]


sp_txt = txt.split()


n = 0
txt = ''
for i in range(len(sp_txt)):
    for j in range(len(sp_txt[i])):
        n =  ord(sp_txt[i][j]) + len(sp_txt[i])
        if n > 122 or 90 < n < 97:
            n = n - 26
        txt += chr(n)
        if j == len(sp_txt[i]) - 1:
            txt += ' '


txt_2 = ''
for i in range(len(txt)):
    if 'a' <= txt[i] <= 'z' or 'A' <= txt[i] <= 'Z':
        txt_2 += txt[i]
        
    
    
a = 0
txt_3 = ''
for i in range(len(text)):
    if 'a' <= text[i] <= 'z' or 'A' <= text[i] <= 'Z':
        txt_3 += txt_2[a]
        a += 1
    else:
        txt_3 += text[i]

print(txt_3)

